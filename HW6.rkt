#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 32
#"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 56 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 190 190 190 0 0 0 -1 -1
          0 3725 0 27 3 10 #"#lang plai"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 23 3 1 #" "
0 0 14 3 5 #"KCFAE"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 3 #"num"
0 0 23 3 2 #" ("
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 14 3 7 #"number?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 3 #"add"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 3 #"rhs"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 3 #"sub"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 3 #"rhs"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 2 #"id"
0 0 23 3 2 #" ("
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 3 #"fun"
0 0 23 3 2 #" ("
0 0 14 3 5 #"param"
0 0 23 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 23 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 4 #"body"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 3 #"app"
0 0 23 3 2 #" ("
0 0 14 3 8 #"fun-expr"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 8 #"arg-expr"
0 0 23 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 3 #"if0"
0 0 23 3 2 #" ("
0 0 14 3 4 #"test"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 4 #"then"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 6 #"withcc"
0 0 23 3 2 #" ("
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 23 3 5 #")    "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"body"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 3 #"try"
0 0 23 3 2 #" ("
0 0 14 3 4 #"trys"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 10 #")         "
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 23 3 8 #")       "
0 0 17 3 20 #"; handle 'catch' as "
0 0 17 3 52 #"a symbol, except 'catch' and 'try', others are KCFAE"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 7 #"catches"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 5 #"throw"
0 0 23 3 3 #"]) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 23 3 1 #" "
0 0 14 3 11 #"KCFAE-Value"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 4 #"numV"
0 0 23 3 2 #" ("
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 14 3 7 #"number?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 8 #"closureV"
0 0 23 3 2 #" ("
0 0 14 3 5 #"param"
0 0 23 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 23 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 4 #"body"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 2 #"sc"
0 0 23 3 1 #" "
0 0 14 3 9 #"DefrdSub?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 5 #"contV"
0 0 23 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 23 3 1 #" "
0 0 14 3 10 #"procedure?"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 23 3 1 #" "
0 0 14 3 8 #"DefrdSub"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 5 #"mtSub"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 4 #"aSub"
0 0 23 3 2 #" ("
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 5 #"value"
0 0 23 3 1 #" "
0 0 14 3 12 #"KCFAE-Value?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 9 #"DefrdSub?"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 23 3 1 #" "
0 0 14 3 8 #"catchSub"
0 0 23 3 2 #"  "
0 0 17 3 55 #"; it saves environment when (try... catch...) is called"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 4 #"mSub"
0 0 23 3 16 #"]               "
0 0 17 3 58
#"; (body of 'try', ds, procedure, other defrdsub for catch)"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ["
0 0 14 3 5 #"aaSub"
0 0 23 3 2 #" ("
0 0 14 3 4 #"body"
0 0 23 3 1 #" "
0 0 14 3 6 #"KCFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 9 #"DefrdSub?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 10 #"procedure?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 9 #"catchSub?"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; ----------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";; parse-fun : (listof symbol) -> (listof symbol)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"parse-fun"
0 0 23 3 1 #" "
0 0 14 3 4 #"funs"
0 0 23 3 23 #")                      "
0 0 17 3 38 #"; parse multiple parameters one by one"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 39 #"                                       "
0 0 17 3 26 #"; they are saved as a list"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 4 #"funs"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 23 3 3 #"()]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 4 #"funs"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"funs"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"funs"
0 0 23 3 3 #") ("
0 0 14 3 9 #"parse-fun"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 4 #"funs"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";; parse-app : (listof KCFAE) -> (listof KCFAE)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"parse-app"
0 0 23 3 1 #" "
0 0 14 3 4 #"apps"
0 0 23 3 21 #")                    "
0 0 17 3 2 #"; "
0 0 17 3 61
#"parse multiple arguments one by one, they are saved as a list"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 4 #"apps"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 23 3 3 #"()]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 4 #"apps"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"apps"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"apps"
0 0 23 3 4 #")) ("
0 0 14 3 9 #"parse-app"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 4 #"apps"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";; parse : S-expr -> KCFAE"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 7 #"number?"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 7 #"symbol?"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 3 #") ("
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 5 #"pair?"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 15 3 4 #"case"
0 0 23 3 2 #" ("
0 0 14 3 3 #"car"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 1 #"+"
0 0 23 3 3 #") ("
0 0 14 3 3 #"add"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 1 #"-"
0 0 23 3 3 #") ("
0 0 14 3 3 #"sub"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 3 #"fun"
0 0 23 3 3 #") ("
0 0 14 3 3 #"fun"
0 0 23 3 2 #" ("
0 0 14 3 9 #"parse-fun"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 6 #")))]  "
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 3 #"app"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 4 #")) ("
0 0 14 3 9 #"parse-app"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 8 #")))])]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 3 #") ("
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 4 #"}) ("
0 0 14 3 3 #"add"
0 0 23 3 2 #" ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 4 #"}) ("
0 0 14 3 3 #"sub"
0 0 23 3 2 #" ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 2 #"} "
0 0 14 3 1 #"z"
0 0 23 3 4 #"}) ("
0 0 14 3 3 #"fun"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"e"
0 0 23 3 3 #") ("
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"z"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 4 #"}) ("
0 0 14 3 3 #"app"
0 0 23 3 2 #" ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"if0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 4 #"}) ("
0 0 14 3 3 #"if0"
0 0 23 3 2 #" ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 4 #"}) ("
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; ----------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";; interp-args : (listof KCFAE) catchSub DefrdSub "
0 0 17 3 52 #"(KCFAE-Value -> alpha) (listof KCFAE-Value) -> alpha"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-args"
0 0 23 3 1 #" "
0 0 14 3 4 #"args"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 3 #"acc"
0 0 23 3 3 #")  "
0 0 17 3 50 #"; interp arguments one by one and save them in acc"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 4 #"args"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 3 #"acc"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"args"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 7 #"arg-val"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 11 #"interp-args"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 4 #"args"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" ("
0 0 14 3 6 #"append"
0 0 23 3 1 #" "
0 0 14 3 3 #"acc"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 7 #"arg-val"
0 0 23 3 8 #")))))]))"
0 0 23 29 1 #"\n"
0 0 17 3 66
#";; makesubs : (listof symbols) (listof KCFAE) DefrdSub -> DefrdSub"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"makesubs"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 1 #" "
0 0 14 3 7 #"arg-val"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 4 #")   "
0 0 17 3 61
#"; make new defrdsub with parameters and interpreted arguments"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 3 #") ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 7 #"arg-val"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"make"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 1 #" "
0 0 14 3 7 #"arg-val"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 31 #"\"not same parameter, arguments\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; make : symbol KCFAE DefrdSub -> DefrdSub"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"make"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 1 #" "
0 0 14 3 7 #"arg-val"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 14 3 2 #"ds"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 4 #"aSub"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 3 #") ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 7 #"arg-val"
0 0 23 3 2 #") "
0 0 14 3 2 #"ds"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"aSub"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 3 #") ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 7 #"arg-val"
0 0 23 3 3 #") ("
0 0 14 3 4 #"make"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 7 #"arg-val"
0 0 23 3 2 #") "
0 0 14 3 2 #"ds"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #";; interp : KCFAE catchSub DefrdSub (KCFAE-Value -> alpha) -> alpha "
 #"  "
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-fae"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 23 3 1 #" "
0 0 14 3 5 #"KCFAE"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-fae"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"num"
0 0 23 3 2 #" ("
0 0 14 3 1 #"n"
0 0 23 3 3 #") ("
0 0 14 3 1 #"k"
0 0 23 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"add"
0 0 23 3 2 #" ("
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 2 #"v1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                 ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 2 #"v2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 1 #"k"
0 0 23 3 2 #" ("
0 0 14 3 4 #"num+"
0 0 23 3 1 #" "
0 0 14 3 2 #"v1"
0 0 23 3 1 #" "
0 0 14 3 2 #"v2"
0 0 23 3 7 #"))))))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"sub"
0 0 23 3 2 #" ("
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 2 #"v1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                 ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 2 #"v2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 1 #"k"
0 0 23 3 2 #" ("
0 0 14 3 4 #"num-"
0 0 23 3 1 #" "
0 0 14 3 2 #"v1"
0 0 23 3 1 #" "
0 0 14 3 2 #"v2"
0 0 23 3 7 #"))))))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 2 #"id"
0 0 23 3 2 #" ("
0 0 14 3 4 #"name"
0 0 23 3 3 #") ("
0 0 14 3 1 #"k"
0 0 23 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 23 3 1 #" "
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"fun"
0 0 23 3 2 #" ("
0 0 14 3 5 #"param"
0 0 23 3 1 #" "
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 1 #"k"
0 0 23 3 2 #" ("
0 0 14 3 8 #"closureV"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 1 #" "
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"app"
0 0 23 3 2 #" ("
0 0 14 3 8 #"fun-expr"
0 0 23 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 7 #"fun-val"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 15 3 9 #"type-case"
0 0 23 3 1 #" "
0 0 14 3 11 #"KCFAE-Value"
0 0 23 3 1 #" "
0 0 14 3 7 #"fun-val"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ["
0 0 14 3 8 #"closureV"
0 0 23 3 2 #" ("
0 0 14 3 5 #"param"
0 0 23 3 1 #" "
0 0 14 3 4 #"body"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 11 #"interp-args"
0 0 23 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 12 #"arg-val-list"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 59
#"                                                          ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 4 #"body"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" ("
0 0 14 3 8 #"makesubs"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 1 #" "
0 0 14 3 12 #"arg-val-list"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 11 2 #") "
0 0 14 3 1 #"k"
0 0 23 3 3 #")) "
0 0 20 3 1 #"'"
0 0 23 3 4 #"())]"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ["
0 0 14 3 5 #"contV"
0 0 23 3 2 #" ("
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 6 #"interp"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                       ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 7 #"arg-val"
0 0 23 3 3 #") ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 7 #"arg-val"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 19 3 16 #"\"not a function\""
0 0 23 3 6 #")])))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"if0"
0 0 23 3 2 #" ("
0 0 14 3 9 #"test-expr"
0 0 23 3 1 #" "
0 0 14 3 9 #"then-expr"
0 0 23 3 1 #" "
0 0 14 3 9 #"else-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 9 #"test-expr"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 1 #"v"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"numzero?"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 9 #"then-expr"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 9 #"else-expr"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 5 #"))))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 6 #"withcc"
0 0 23 3 2 #" ("
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 4 #"aSub"
0 0 23 3 1 #" "
0 0 14 3 2 #"id"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 5 #"contV"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                          "
0 0 14 3 2 #"ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                    "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"try"
0 0 23 3 2 #" ("
0 0 14 3 4 #"trys"
0 0 23 3 1 #" "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 14 3 7 #"catches"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 4 #"trys"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 5 #"aaSub"
0 0 23 3 1 #" "
0 0 14 3 7 #"catches"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 14 3 2 #"ds"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 14 3 1 #"k"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 14 3 1 #"c"
0 0 23 3 2 #") "
0 0 14 3 2 #"ds"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                 "
0 0 14 3 1 #"k"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 5 #"throw"
0 0 23 3 5 #" () ("
0 0 14 3 6 #"interp"
0 0 23 3 2 #" ("
0 0 14 3 10 #"aaSub-body"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 3 #") ("
0 0 14 3 10 #"aaSub-rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 3 #") ("
0 0 14 3 8 #"aaSub-ds"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 3 #") ("
0 0 14 3 7 #"aaSub-k"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";; num-op : (number number -> number) -> (KCFAE-Value KCFAE-Value ->"
 #" KCFAE-Value)"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"num-op"
0 0 23 3 1 #" "
0 0 14 3 2 #"op"
0 0 23 3 1 #" "
0 0 14 3 7 #"op-name"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"numV"
0 0 23 3 2 #" ("
0 0 14 3 2 #"op"
0 0 23 3 2 #" ("
0 0 14 3 6 #"numV-n"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #") ("
0 0 14 3 6 #"numV-n"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"num+"
0 0 23 3 2 #" ("
0 0 14 3 6 #"num-op"
0 0 23 3 1 #" "
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"+"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"num-"
0 0 23 3 2 #" ("
0 0 14 3 6 #"num-op"
0 0 23 3 1 #" "
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"-"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; numzero? : KCFAE-Value -> boolean"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"numzero?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"zero?"
0 0 23 3 2 #" ("
0 0 14 3 6 #"numV-n"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 23 3 1 #" "
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 23 3 1 #" "
0 0 14 3 8 #"DefrdSub"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 5 #"mtSub"
0 0 23 3 5 #" () ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"lookup"
0 0 23 3 1 #" "
0 0 19 3 15 #"\"free variable\""
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"aSub"
0 0 23 3 2 #" ("
0 0 14 3 8 #"sub-name"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 14 3 7 #"rest-sc"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 1 #" "
0 0 14 3 8 #"sub-name"
0 0 23 3 1 #" "
0 0 14 3 4 #"name"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 3 #"num"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 6 #"lookup"
0 0 23 3 1 #" "
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 7 #"rest-sc"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 23 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"mtSub"
0 0 23 3 3 #")) "
0 0 19 3 15 #"\"free variable\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 4 #"aSub"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 3 #") ("
0 0 14 3 5 #"mtSub"
0 0 23 3 5 #"))) ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 4 #"aSub"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"y"
0 0 23 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 3 #") ("
0 0 14 3 4 #"aSub"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 3 #") ("
0 0 14 3 5 #"mtSub"
0 0 23 3 6 #")))) ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";; interp-expr : KCFAE -> KCFAE-Value"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-fae"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 23 3 1 #" "
0 0 14 3 11 #"KCFAE-Value"
0 0 23 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-fae"
0 0 23 3 2 #" ("
0 0 14 3 4 #"mSub"
0 0 23 3 3 #") ("
0 0 14 3 5 #"mtSub"
0 0 23 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 1 #"x"
0 0 23 3 2 #") "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"numV"
0 0 23 3 2 #" ("
0 0 14 3 1 #"n"
0 0 23 3 2 #") "
0 0 14 3 1 #"n"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 8 #"closureV"
0 0 23 3 2 #" ("
0 0 14 3 5 #"param"
0 0 23 3 1 #" "
0 0 14 3 4 #"body"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 8 #"function"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 5 #"contV"
0 0 23 3 2 #" ("
0 0 14 3 1 #"k"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 8 #"function"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 3 #")) "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 2 #"} "
0 0 14 3 1 #"x"
0 0 23 3 4 #"})) "
0 0 20 3 1 #"'"
0 0 14 3 8 #"function"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 4 #"})) "
0 0 20 3 1 #"'"
0 0 14 3 8 #"function"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 4 #"})) "
0 0 20 3 2 #"17"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 4 #"})) "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 2 #"}}"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"17"
0 0 23 3 4 #"}}))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 2 #"30"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 2 #"}}"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"17"
0 0 23 3 2 #"} "
0 0 20 3 1 #"3"
0 0 23 3 3 #"}))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 2 #"30"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 4 #"} {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"f"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #"}"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                 {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #"}}"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                  "
0 0 20 3 1 #"3"
0 0 23 3 3 #"}}}"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 4 #"}}}}"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 20 3 1 #"0"
0 0 23 3 3 #"}))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 4 #"}}))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #"}"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                      "
0 0 20 3 2 #"17"
0 0 23 3 4 #"}}))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";; Check for eager evaluation:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 23 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 2 #"} "
0 0 20 3 1 #"0"
0 0 23 3 1 #"}"
0 0 23 29 1 #"\n"
0 0 23 3 33 #"                                {"
0 0 20 3 1 #"1"
0 0 23 3 2 #" {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"y"
0 0 23 3 2 #"} "
0 0 14 3 1 #"y"
0 0 23 3 5 #"}}}))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"          "
0 0 19 3 16 #"\"not a function\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 14 3 4 #"expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"interp-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 14 3 4 #"expr"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #"} "
0 0 20 3 2 #"17"
0 0 23 3 5 #"}}}) "
0 0 20 3 3 #"-10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #"} "
0 0 20 3 2 #"17"
0 0 23 3 8 #"}}}}}}) "
0 0 20 3 3 #"-11"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 4 #"1000"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 6 #"}}}}) "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 2 #"15"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 6 #"}}}}) "
0 0 20 3 2 #"-3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #" {"
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 20 3 2 #"15"
0 0 23 3 6 #"}}}}) "
0 0 20 3 3 #"-15"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 3 #"{{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"c"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #"} "
0 0 14 3 1 #"c"
0 0 23 3 4 #"}}} "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #"} "
0 0 20 3 1 #"3"
0 0 23 3 3 #"}) "
0 0 20 3 1 #"6"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"if0"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"esc"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #" {"
0 0 14 3 3 #"esc"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 4 #"}}} "
0 0 20 3 2 #"10"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 4 #"}}) "
0 0 20 3 3 #"-10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"if0"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"esc"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #" {"
0 0 14 3 3 #"esc"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 4 #"}}} "
0 0 20 3 2 #"10"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 4 #"}}) "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"esc"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"f"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #"}} "
0 0 14 3 3 #"esc"
0 0 23 3 5 #"}}}) "
0 0 20 3 2 #"-3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #"}} "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 3 #"}) "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"fun"
0 0 23 3 4 #" {} "
0 0 14 3 1 #"x"
0 0 23 3 4 #"}}) "
0 0 20 3 1 #"'"
0 0 14 3 8 #"function"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 3 #"{{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"fun"
0 0 23 3 4 #" {} "
0 0 14 3 1 #"x"
0 0 23 3 3 #"}} "
0 0 20 3 2 #"13"
0 0 23 3 4 #"}}) "
0 0 20 3 2 #"13"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"esc"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #"} "
0 0 14 3 1 #"x"
0 0 23 3 2 #"} "
0 0 20 3 1 #"1"
0 0 23 3 2 #" {"
0 0 14 3 3 #"esc"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 5 #"}}}) "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 6 #"}}}}) "
0 0 20 3 2 #"12"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 4 #"}}} "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 3 #"}) "
0 0 20 3 1 #"9"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 3 #"}} "
0 0 20 3 1 #"4"
0 0 23 3 4 #"} ) "
0 0 20 3 1 #"9"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 4 #"}} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"if0"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #"} "
0 0 20 3 1 #"1"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"g"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 6 #"}}}}} "
0 0 20 3 2 #"10"
0 0 23 3 3 #"}) "
0 0 20 3 2 #"55"
0 0 23 3 2 #") "
0 0 17 3 2 #"; "
0 0 17 11 10 #"recursive "
0 0 17 3 8 #"function"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 4 #"done"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 4 #"}} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"if0"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #"} {"
0 0 14 3 4 #"done"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"g"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 11 6 #"}}}}} "
0 0 20 3 2 #"10"
0 0 23 3 4 #"}}) "
0 0 20 3 3 #"100"
0 0 23 3 2 #") "
0 0 17 3 49 #"; exit from recursive function using continuation"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 6 #"}}} ) "
0 0 20 3 3 #"100"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 6 #"}}} ) "
0 0 20 3 4 #"-100"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 1 #" "
0 0 20 3 2 #"11"
0 0 23 3 6 #"}}} ) "
0 0 20 3 3 #"111"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"-"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 2 #"} "
0 0 14 3 1 #"a"
0 0 23 3 3 #"}} "
0 0 14 3 1 #"b"
0 0 23 3 2 #"} "
0 0 14 3 1 #"c"
0 0 23 3 3 #"}} "
0 0 20 3 3 #"100"
0 0 23 3 1 #" "
0 0 20 3 3 #"200"
0 0 23 3 1 #" "
0 0 20 3 3 #"300"
0 0 23 3 4 #"} ) "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"esc"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #"} "
0 0 14 3 1 #"x"
0 0 23 3 2 #"} "
0 0 20 3 1 #"1"
0 0 23 3 2 #" {"
0 0 14 3 3 #"esc"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 5 #"}}}) "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"esc"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"z"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"z"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 4 #"}}} "
0 0 20 3 1 #"1"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 3 #"esc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 5 #"}}}} "
0 0 20 3 2 #"10"
0 0 23 3 3 #"}) "
0 0 20 3 2 #"20"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 4 #"}} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"if0"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #"} {"
0 0 14 3 5 #"throw"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"g"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 6 #"}}}}} "
0 0 20 3 2 #"10"
0 0 23 3 2 #"} "
0 0 15 3 5 #"catch"
0 0 23 11 1 #" "
0 0 20 3 3 #"110"
0 0 23 3 3 #"}) "
0 0 20 3 3 #"110"
0 0 23 3 2 #") "
0 0 17 3 46 #"; exit from recursive function using try-catch"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 4 #"}} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"if0"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #"} {"
0 0 14 3 5 #"throw"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"g"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 4 #"}}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 11 4 #"}}} "
0 0 20 3 2 #"10"
0 0 23 3 3 #"}) "
0 0 20 3 2 #"54"
0 0 23 3 2 #") "
0 0 17 3 39 #"; test for multiple recursive try-catch"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 4 #"done"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 4 #"}} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"if0"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #"} {"
0 0 14 3 5 #"throw"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"g"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 11 4 #"}}} "
0 0 15 3 5 #"catch"
0 0 23 3 2 #" {"
0 0 14 3 4 #"done"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 5 #"}}}} "
0 0 20 3 2 #"10"
0 0 23 3 4 #"}}) "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 4 #"}} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"if0"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #"} {"
0 0 14 3 5 #"throw"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #" {"
0 0 14 3 1 #"g"
0 0 23 3 1 #" "
0 0 14 3 1 #"g"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 4 #"}}} "
0 0 15 3 5 #"catch"
0 0 23 11 1 #" "
0 0 23 3 1 #"{"
0 0 14 3 5 #"throw"
0 0 23 3 5 #"}}}} "
0 0 20 3 2 #"10"
0 0 23 3 2 #"} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 8 #"20110464"
0 0 23 3 3 #"}) "
0 0 20 3 8 #"20110464"
0 0 23 3 2 #") "
0 0 17 3 2 #"; "
0 0 17 3 10 #"recursive "
0 0 17 3 22 #"try-catch throwing (1)"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"z"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 3 #"}} "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 3 #"}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #"}) "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"f"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #"} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 4 #"}} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 5 #"throw"
0 0 23 3 5 #"}}}) "
0 0 20 3 1 #"8"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 6 #"}}}}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 2 #"89"
0 0 23 3 3 #"}) "
0 0 20 3 2 #"89"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 4 #"1000"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 6 #"}}}}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 2 #"11"
0 0 23 3 3 #"}) "
0 0 20 3 2 #"11"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"z"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 4 #"}}} "
0 0 15 3 5 #"catch"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"z"
0 0 23 3 4 #"}}} "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #"}) "
0 0 20 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 3 #"}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #"} "
0 0 20 3 2 #"10"
0 0 23 3 3 #"}) "
0 0 20 3 2 #"13"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 3 #"if0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #"}} "
0 0 15 3 5 #"catch"
0 0 23 3 2 #" {"
0 0 14 3 3 #"if0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" {"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 2 #"} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 2 #"54"
0 0 23 3 7 #"}}})   "
0 0 20 3 2 #"54"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 5 #"}}}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 3 #"}) "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 3 #"}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 3 #"}) "
0 0 20 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 3 #"if0"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 2 #"} "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 2 #"} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 3 #"}) "
0 0 20 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"try"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 4 #"}} {"
0 0 14 3 5 #"throw"
0 0 23 3 2 #"} "
0 0 20 3 1 #"0"
0 0 23 3 2 #"} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 3 #"}) "
0 0 20 3 2 #"-1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 2 #"} "
0 0 15 3 5 #"catch"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 3 #"}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 3 #"}) "
0 0 20 3 1 #"9"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"esc"
0 0 23 3 2 #" {"
0 0 14 3 3 #"try"
0 0 23 3 3 #" {{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 3 #"esc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 3 #"}} "
0 0 20 3 1 #"0"
0 0 23 3 2 #"} "
0 0 15 3 5 #"catch"
0 0 23 3 2 #" {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 2 #"} "
0 0 20 3 1 #"8"
0 0 23 3 5 #"}}} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 5 #"throw"
0 0 23 3 5 #"}}}) "
0 0 20 3 1 #"8"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"{{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"esc"
0 0 23 3 2 #" {"
0 0 14 3 3 #"try"
0 0 23 3 3 #" {{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 3 #"esc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #"} "
0 0 15 3 5 #"catch"
0 0 23 3 2 #" {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"y"
0 0 23 3 2 #"} "
0 0 20 3 1 #"9"
0 0 23 3 5 #"}}}} "
0 0 20 3 1 #"0"
0 0 23 3 2 #"} "
0 0 15 3 5 #"catch"
0 0 23 3 2 #" {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 11 2 #"} "
0 0 20 3 1 #"8"
0 0 23 3 5 #"}}} {"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 3 #"} {"
0 0 14 3 5 #"throw"
0 0 23 3 5 #"}}}) "
0 0 20 3 1 #"8"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"foo"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 4 #"}} {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #"} {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"bar"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" {"
0 0 14 3 3 #"bar"
0 0 23 3 1 #" "
0 0 14 3 3 #"foo"
0 0 23 3 7 #"}}}}}) "
0 0 20 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"zzz"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"z"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"z"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #"}}} "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #" {"
0 0 14 3 3 #"zzz"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 3 #"} {"
0 0 14 3 5 #"throw"
0 0 23 3 4 #"}}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 2 #"42"
0 0 23 3 3 #"}) "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"zzz"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"z"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"z"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #"}}} "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"zzz"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 4 #"}}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 2 #"42"
0 0 23 3 3 #"}) "
0 0 20 3 2 #"42"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"zzz"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"z"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 1 #"w"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 4 #"}} {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 2 #"} "
0 0 14 3 1 #"z"
0 0 23 3 4 #"}}} "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 14 3 3 #"zzz"
0 0 23 3 3 #"}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 2 #"42"
0 0 23 3 3 #"}) "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"esc"
0 0 23 3 2 #" {"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 3 #"} {"
0 0 14 3 3 #"esc"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #"}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 4 #"}}) "
0 0 20 3 1 #"4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 3 #"esc"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #"} "
0 0 14 3 1 #"y"
0 0 23 3 4 #"}} {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 3 #"esc"
0 0 23 3 2 #" {"
0 0 14 3 5 #"throw"
0 0 23 3 4 #"}}} "
0 0 15 3 5 #"catch"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 4 #"}}} "
0 0 20 3 1 #"7"
0 0 23 11 4 #"}}) "
0 0 20 3 2 #"15"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 3 #"try"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 2 #" {"
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #"} {"
0 0 14 3 5 #"throw"
0 0 23 3 4 #"}}} "
0 0 15 3 5 #"catch"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #"}) "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"{"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 2 #" {"
0 0 14 3 6 #"withcc"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #" {"
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" {"
0 0 14 3 1 #"k"
0 0 23 3 3 #" {{"
0 0 14 3 3 #"fun"
0 0 23 3 4 #" {} "
0 0 20 3 1 #"7"
0 0 23 3 8 #"}}}}}}) "
0 0 20 3 2 #"19"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0           0
